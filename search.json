[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 scenarios authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/comparisons.html","id":"comparing-within-the-uk","dir":"Articles","previous_headings":"","what":"Comparing within the UK","title":"Comparing epidemic scenarios","text":"compare within UK, filter comparison object “country” entry extra information scenario. Get scenario outcomes visualise.","code":"# filter on the country and whether data have a 'p_infected' column flu_comparison_uk <- sce_filter_comparable(   flu_comparison,   match_variables = \"country\",   comparison_variables = \"p_infected\" )  # print and view flu_comparison_uk #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"uniform_mixing\" #>  All scenario data are prepared, use `sce_get_outcomes()` to get data #>  Scenario matching variables: #>   \"country\" #>  Scenario comparison variables: #>   \"p_infected\" #>  Model functions found: #>   finalsize::final_size  sce_get_scenario_names(flu_comparison_uk) #> [1] \"uniform_mixing\"        \"age_stratified_mixing\" # get data which are final_size outputs bound together data_comparison_uk <- sce_get_outcomes(flu_comparison_uk)  # print to view data_comparison_uk #>      demo_grp   susc_grp susceptibility p_infected replicate #>        <char>     <char>          <num>      <num>     <int> #> 1: demo_grp_1 susc_grp_1              1  0.5828116         1 #> 2:     [0,20) susc_grp_1              1  0.6544866         1 #> 3:    [20,40) susc_grp_1              1  0.5750030         1 #> 4:        40+ susc_grp_1              1  0.4588871         1 #>            scenario_name #>                   <char> #> 1:        uniform_mixing #> 2: age_stratified_mixing #> 3: age_stratified_mixing #> 4: age_stratified_mixing  # change name of total population group data_comparison_uk[scenario_name == \"uniform_mixing\", demo_grp := \"Total pop.\"] ggplot(data_comparison_uk) +   geom_col(     aes(demo_grp, p_infected, fill = scenario_name),     col = \"black\"   ) +   expand_limits(     x = c(0.5, nrow(data_comparison_uk) + 0.5)   ) +   scale_fill_brewer(     palette = \"Accent\",     name = \"Population susceptibility\",     labels = c(\"Heterogeneous\", \"Uniform\")   ) +   scale_y_continuous(     labels = scales::percent,     limits = c(0, 1)   ) +   theme_classic() +   theme(     legend.position = \"top\",     legend.key.height = unit(2, \"mm\")   ) +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Age group\",     y = \"% Infected\"   )"},{"path":"/articles/comparisons.html","id":"comparing-uniform-mixing-across-countries","dir":"Articles","previous_headings":"","what":"Comparing uniform mixing, across countries","title":"Comparing epidemic scenarios","text":"Filter “age_groups” attribute compare uniform_mixing across UK Germany. Get scenario outcomes visualise.","code":"# filter on the country and whether data have a 'p_infected' column flu_comparison_uniform <- sce_filter_comparable(   flu_comparison,   match_variables = \"age_groups\",   comparison_variables = \"p_infected\" )  # print and view flu_comparison_uniform #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"uniform_mixing\" #>  All scenario data are prepared, use `sce_get_outcomes()` to get data #>  Scenario matching variables: #>   \"age_groups\" #>  Scenario comparison variables: #>   \"p_infected\" #>  Model functions found: #>   finalsize::final_size  # print scenario names in this comparison sce_get_scenario_names(flu_comparison_uniform) #> [1] \"uniform_mixing\"    \"uniform_mixing_de\" # get data which are final_size outputs bound together data_comparison_uniform <- sce_get_outcomes(flu_comparison_uniform)  # print to view data_comparison_uniform #>      demo_grp   susc_grp susceptibility p_infected replicate     scenario_name #>        <char>     <char>          <num>      <num>     <int>            <char> #> 1: demo_grp_1 susc_grp_1              1  0.5828116         1    uniform_mixing #> 2: demo_grp_1 susc_grp_1              1  0.5828116         1 uniform_mixing_de ggplot(data_comparison_uniform) +   geom_col(     aes(demo_grp, p_infected, fill = scenario_name),     col = \"black\",     position = position_dodge(width = 1)   ) +   expand_limits(     x = c(0.5, 1.5)   ) +   scale_fill_brewer(     palette = \"Dark2\",     name = \"Country\",     labels = c(\"UK\", \"DE\")   ) +   scale_y_continuous(     labels = scales::percent,     limits = c(0, 1)   ) +   theme_classic() +   theme(     legend.position = \"top\",     legend.key.height = unit(2, \"mm\"),     axis.text.x = element_blank()   ) +   coord_cartesian(     expand = FALSE   ) +   labs(     x = \"Total population\",     y = \"% Infected\"   )"},{"path":"/articles/scenarios.html","id":"use-case","dir":"Articles","previous_headings":"","what":"Use case","title":"Defining epidemic scenarios and comparisons","text":"compare outcomes epidemic scenario models, proportion population infected stage outbreak. Current use cases focus comparing cumulative proportion individuals infected course epidemic wave, called ‘final size’ epidemic.","code":""},{"path":"/articles/scenarios.html","id":"what-you-need","dir":"Articles","previous_headings":"","what":"What you need","title":"Defining epidemic scenarios and comparisons","text":"epidemic model R function produces data frames outputs, Parameters epidemic model, typically arguments model function.","code":""},{"path":"/articles/scenarios.html","id":"what-we-assume","dir":"Articles","previous_headings":"","what":"What we assume","title":"Defining epidemic scenarios and comparisons","text":"epidemic scenarios broadly comparable conceptual level.","code":""},{"path":"/articles/scenarios.html","id":"components-of-an-epidemic-scenario-model","dir":"Articles","previous_headings":"","what":"Components of an epidemic scenario model","title":"Defining epidemic scenarios and comparisons","text":"scenarios package intended help comparison epidemic model scenarios. scenarios package defines scenario class, epidemic model definition without associated data. scenario expected : model function, model parameters form named function arguments, number replicates run.","code":""},{"path":"/articles/scenarios.html","id":"defining-scenarios-for-the-final-size-of-an-epidemic","dir":"Articles","previous_headings":"","what":"Defining scenarios for the final size of an epidemic","title":"Defining epidemic scenarios and comparisons","text":"example considers definition scenario specifications outbreak epidemic U.K. population, uses demography social contact data POLYMOD survey (Mossong et al. 2008). conveniently provided finalsize package, can obtained coutries (surveys) socialmixr package. First define epidemic scenarios.","code":"# get inbuilt parameters using a convenience function parameters_finalsize_low_r0 <- make_parameters_finalsize_UK(r0 = 1.5) age_groups <- rownames(parameters_finalsize_low_r0$contact_matrix)  # define a low R0 scenario comparable to pandemic influenza low_r0 <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = parameters_finalsize_low_r0,   extra_info = list(     age_groups = age_groups   ),   replicates = 1L )  # define a higher R0 scenario comparable to Covid-19 # note no age group information is added yet high_r0 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L ) # print scenarios to examine information low_r0 #> Epidemic scenario object #>  Scenario name: \"pandemic_flu\" #>  Model function: finalsize::final_size #>  Extra information on: \"age_groups\" #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared high_r0 #> Epidemic scenario object #>  Scenario name: \"covid19\" #>  Model function: finalsize::final_size #>  Extra information on:  #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/articles/scenarios.html","id":"getting-scenario-parameters","dir":"Articles","previous_headings":"","what":"Getting scenario parameters","title":"Defining epidemic scenarios and comparisons","text":"Scenario objects can queried information using sce_get_information(). function searches scenario’s parameters extra_info lists named elements returns found. scenario information, informative error message returned.","code":"# get information on the model parameter r0 sce_get_information(low_r0, which = \"r0\") #> $r0 #> [1] 1.5  # get information on the demography groups sce_get_information(low_r0, which = c(\"r0\", \"age_groups\")) #> $r0 #> [1] 1.5 #>  #> $age_groups #> [1] \"[0,20)\"  \"[20,40)\" \"40+\"  sce_get_information(low_r0, which = \"contact_matrix\") #> $contact_matrix #>                   #> contact.age.group         [,1]         [,2]         [,3] #>           [0,20)  4.514575e-08 1.600071e-08 8.965770e-09 #>           [20,40) 1.600071e-08 2.489595e-08 1.346051e-08 #>           40+     8.965770e-09 1.346051e-08 1.464763e-08 # no data found sce_get_information(high_r0, which = \"age_groups\") #> Error in sce_get_information(high_r0, which = \"age_groups\"): 'age_groups' not found among scenario model parameters or extra information"},{"path":"/articles/scenarios.html","id":"adding-information-to-scenarios","dir":"Articles","previous_headings":"","what":"Adding information to scenarios","title":"Defining epidemic scenarios and comparisons","text":"Information can added scenarios using sce_add_info(), information passed element named list. function checks whether list names already present extra_info list, adds present, erroring otherwise.","code":"# add age group size information high_r0 <- sce_add_info(   high_r0, list(age_groups = age_groups) )  # print to check that data are added high_r0 #> Epidemic scenario object #>  Scenario name: \"covid19\" #>  Model function: finalsize::final_size #>  Extra information on: \"age_groups\" #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/articles/scenarios.html","id":"prepare-scenario-data","dir":"Articles","previous_headings":"","what":"Prepare scenario data","title":"Defining epidemic scenarios and comparisons","text":"scenario objects created thus far data, model_function called parameters populate data list. scenario outcome data can added scenario running scenario using run_scenario().","code":"# add outcome data to scenarios # assigning to different object for clarity low_r0_data <- run_scenario(low_r0) high_r0_data <- run_scenario(high_r0) # print scenario to check information low_r0_data #> Epidemic scenario object #>  Scenario name: \"pandemic_flu\" #>  Model function: finalsize::final_size #>  Extra information on: \"age_groups\" #>  Scenario replicates: 1 #>  Scenario outcomes are prepared"},{"path":"/articles/scenarios.html","id":"getting-scenario-data","dir":"Articles","previous_headings":"","what":"Getting scenario data","title":"Defining epidemic scenarios and comparisons","text":"scenario data can accessed (long data frames) using sce_get_outcomes(), returns data.table outcomes, additional column indicate replicate number.","code":"# peeking at data to examine column names sce_peek_outcomes(low_r0_data, view_rows = FALSE) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\"  # get full outcome data as data.table sce_get_outcomes(low_r0_data) #>    demo_grp   susc_grp susceptibility p_infected replicate #>      <char>     <char>          <num>      <num>     <int> #> 1:   [0,20) susc_grp_1              1  0.6544866         1 #> 2:  [20,40) susc_grp_1              1  0.5750030         1 #> 3:      40+ susc_grp_1              1  0.4588871         1"},{"path":"/articles/scenarios.html","id":"check-whether-scenarios-are-comparable","dir":"Articles","previous_headings":"","what":"Check whether scenarios are comparable","title":"Defining epidemic scenarios and comparisons","text":"","code":"# comparing scenarios while expecting an identical match # this is less useful when comparing scenarios that obviously # differ on an important parameter such as R0 sce_are_comparable(   baseline = low_r0_data,   compare = high_r0_data,   match_variables = \"r0\",   comparison_variables = \"p_infected\" ) #> Scenario parameters do not match, scenarios are not comparable. #> These parameters do not match: 'r0' #> [1] FALSE  # match variables must be *identical* sce_are_comparable(   baseline = low_r0_data,   compare = high_r0_data,   match_variables = \"age_groups\",   comparison_variables = \"p_infected\" ) #> [1] TRUE"},{"path":"/articles/scenarios.html","id":"creating-a-comparison-object","dir":"Articles","previous_headings":"","what":"Creating a comparison object","title":"Defining epidemic scenarios and comparisons","text":"Scenarios can wrapped comparison object. convenient structured way holding numerous scenarios. brief introduction given . data individual scenarios can accessed single data table using sce_get_outcomes() function.","code":"# create object, passing prepared scenarios with some names outbreak_comparison <- comparison(   low_r0_data, high_r0_data,   baseline = \"pandemic_flu\" )  # check the scenario names in this comparison sce_get_scenario_names(outbreak_comparison) #> [1] \"pandemic_flu\" \"covid19\"  # print to examine output outbreak_comparison #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"pandemic_flu\" #>  All scenario data are prepared, use `sce_get_outcomes()` to get data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size # scenario output can be accessed from a comparison object as well # using multiple dispatch on the sce_get_outcomes function sce_get_outcomes(outbreak_comparison) #>    demo_grp   susc_grp susceptibility p_infected replicate scenario_name #>      <char>     <char>          <num>      <num>     <int>        <char> #> 1:   [0,20) susc_grp_1              1  0.6544866         1  pandemic_flu #> 2:  [20,40) susc_grp_1              1  0.5750030         1  pandemic_flu #> 3:      40+ susc_grp_1              1  0.4588871         1  pandemic_flu #> 4:   [0,20) susc_grp_1              1  0.9973053         1       covid19 #> 5:  [20,40) susc_grp_1              1  0.9941026         1       covid19 #> 6:      40+ susc_grp_1              1  0.9785699         1       covid19"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder. Rosalind Eggo. Author, copyright holder. Edwin Van Leeuwen. Author, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P, Eggo R, Van Leeuwen E (2024). scenarios: Compare Epidemic Scenarios. R package version 0.0.0.9000, https://epiverse-trace.github.io/scenarios/, https://github.com/epiverse-trace/scenarios.","code":"@Manual{,   title = {scenarios: Compare Epidemic Scenarios},   author = {Pratik Gupte and Rosalind Eggo and Edwin {Van Leeuwen}},   year = {2024},   note = {R package version 0.0.0.9000, https://epiverse-trace.github.io/scenarios/},   url = {https://github.com/epiverse-trace/scenarios}, }"},{"path":"/index.html","id":"scenarios-compare-epidemic-scenarios-","dir":"","previous_headings":"","what":"Compare Epidemic Scenarios","title":"Compare Epidemic Scenarios","text":"scenarios intended provide functions compare outcomes epidemic modelling simulations. development scenarios suspended favour increased scenario modelling comparison functionality coming epidemics package. Development may resume use case separate comparison package clearer.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compare Epidemic Scenarios","text":"can install development version scenarios GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"epiverse-trace/scenarios\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Compare Epidemic Scenarios","text":"examples show existing functionality; currently planned developed .","code":""},{"path":"/index.html","id":"an-example-with-finalsize","dir":"","previous_headings":"Quick start","what":"An example with finalsize","title":"Compare Epidemic Scenarios","text":"Define epidemic model scenario creating new scenario object. standard workflow needs model function, finalsize::final_size(), appropriate arguments function. View summary scenario. scenario object created model function initially run. can checked using helper function. Tip: Many helper functions prefix sce_ help found quickly using autocomplete various text editors IDEs. Model outcome data can generated running model function parameters specified scenario. Take peek column names model outcome replicates. Get outcomes replicates single dataset, aggregate outcome variable interest across replicates grouping variable.","code":"# load scenarios library(scenarios)  # create a scenario for pandemic-potential influenza # with finalsize::final_size() as the model function scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(), # a helper function   replicates = 3 ) scenario_pandemic_flu #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on:  #>  Scenario replicates: 3 #>  Scenario outcomes are not prepared # check whether the scenario data have been generated sce_has_data(scenario_pandemic_flu) #> [1] FALSE scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu) sce_peek_outcomes(scenario_pandemic_flu) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\" # get all output head(sce_get_outcomes(scenario_pandemic_flu)) #>    demo_grp   susc_grp susceptibility p_infected replicate #>      <char>     <char>          <num>      <num>     <int> #> 1:   [0,20) susc_grp_1              1  0.6544866         1 #> 2:  [20,40) susc_grp_1              1  0.5750030         1 #> 3:      40+ susc_grp_1              1  0.4588871         1 #> 4:   [0,20) susc_grp_1              1  0.6544866         2 #> 5:  [20,40) susc_grp_1              1  0.5750030         2 #> 6:      40+ susc_grp_1              1  0.4588871         2  # aggregate proportion infected by demographic group # NOTE that all replicates have the same outcome in this deterministic model sce_aggregate_outcomes(   x = scenario_pandemic_flu,   grouping_variables = c(\"demo_grp\"),   measure_variables = c(\"p_infected\"),   summary_functions = c(\"mean\", \"min\", \"max\") ) #> Key: <demo_grp> #>    demo_grp p_infected_mean p_infected_min p_infected_max #>      <char>           <num>          <num>          <num> #> 1:      40+       0.4588871      0.4588871      0.4588871 #> 2:   [0,20)       0.6544866      0.6544866      0.6544866 #> 3:  [20,40)       0.5750030      0.5750030      0.5750030"},{"path":"/index.html","id":"an-example-with-epidemics","dir":"","previous_headings":"Quick start","what":"An example with epidemics","title":"Compare Epidemic Scenarios","text":"example shows workflow applied simple, deterministic epidemic model epidemics package.","code":"# create a new scenario scenario_sir <- scenario(   model_function = \"epidemics::sir_desolve\",   parameters = make_parameters_SIR_epidemic(), # a helper function   replicates = 5L )  # view the initial conditions and infection parameters sce_get_information(scenario_sir, which = c(\"init\", \"parms\")) #> $init #>    S    I    R  #> 0.99 0.01 0.00  #>  #> $parms #>  beta gamma  #>   1.0   0.1  # generate scenario outcomes by running the model scenario_sir <- run_scenario(scenario_sir)  # peek at the outcomes sce_peek_outcomes(scenario_sir) #>       time      state proportion  replicate  #>  \"numeric\"   \"factor\"  \"numeric\"  \"integer\"  # view the aggregated outcomes # this is the per-timestep, per-class (S, I, R) mean proportion # and is the same across replicates in this deterministic model tail(   sce_aggregate_outcomes(     scenario_sir,     grouping_variables = c(\"time\", \"state\"),     measure_variables = \"proportion\",     summary_functions = \"mean\"   ) ) #> Key: <time, state> #>     time  state proportion_mean #>    <num> <fctr>           <num> #> 1:    99      S    4.501519e-05 #> 2:    99      I    8.643038e-05 #> 3:    99      R    9.998686e-01 #> 4:   100      S    4.501149e-05 #> 5:   100      I    7.820928e-05 #> 6:   100      R    9.998768e-01"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Compare Epidemic Scenarios","text":"report bug please open issue; please note development scenarios suspended.","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Compare Epidemic Scenarios","text":"Development scenarios suspended. However, use cases requirements package helps compare outcomes epidemic scenario models welcome issues, main Epiverse Discussion board. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Compare Epidemic Scenarios","text":"Please note scenarios project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a comparison object — comparison","title":"Create a comparison object — comparison","text":"comparison class intended store scenarios compare among . One scenario must set 'baseline' comparisons.","code":""},{"path":"/reference/comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a comparison object — comparison","text":"","code":"comparison(..., baseline)"},{"path":"/reference/comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a comparison object — comparison","text":"... Multiple scenarios list scenario objects. least one scenarios, 'baseline' scenario, must named comparison correctly constructed. baseline scenario name must passed baseline. baseline string element list scenario objects indicates considered 'baseline' outcome, outcomes compared.","code":""},{"path":"/reference/comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a comparison object — comparison","text":"comparison object","code":""},{"path":"/reference/comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a comparison object — comparison","text":"","code":"# prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create a comparison object comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" ) #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"pandemic_flu\" #>  Some scenarios have no data, use `run_scenario()` to prepare data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size  # pass scenario objects as a list # create a comparison object comparison(   list(pandemic_flu, covid19),   baseline = \"pandemic_flu\" ) #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"pandemic_flu\" #>  Some scenarios have no data, use `run_scenario()` to prepare data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size"},{"path":"/reference/is_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a comparison — is_comparison","title":"Check whether an object is a comparison — is_comparison","text":"Check whether object comparison","code":""},{"path":"/reference/is_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a comparison — is_comparison","text":"","code":"is_comparison(x)"},{"path":"/reference/is_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a comparison — is_comparison","text":"x R object.","code":""},{"path":"/reference/is_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a comparison — is_comparison","text":"logical indicating whether object inherits class comparison.","code":""},{"path":"/reference/is_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is a comparison — is_comparison","text":"","code":"# prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create a comparison object x <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  is_comparison(x) #> [1] TRUE"},{"path":"/reference/is_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a scenario — is_scenario","title":"Check whether an object is a scenario — is_scenario","text":"Check whether object scenario","code":""},{"path":"/reference/is_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a scenario — is_scenario","text":"","code":"is_scenario(x)"},{"path":"/reference/is_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a scenario — is_scenario","text":"x R object.","code":""},{"path":"/reference/is_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a scenario — is_scenario","text":"logical indicating whether object inherits class scenario.","code":""},{"path":"/reference/is_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is a scenario — is_scenario","text":"","code":"# prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  is_scenario(pandemic_flu) #> [1] TRUE"},{"path":"/reference/make_parameters_SIR_epidemic.html","id":null,"dir":"Reference","previous_headings":"","what":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"Function make convenient default parameters SIR epidemic model implemented epidemics::sir_desolve().","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"","code":"make_parameters_SIR_epidemic(beta = 1, gamma = 0.1)"},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"beta rate transmission \\(\\beta\\). gamma rate recovery infected individuals \\(\\gamma\\).","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"list SIR model parameters, suitable arguments epidemics::sir_desolve().","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"","code":"make_parameters_SIR_epidemic() #> $times #>   [1]   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [19]  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35 #>  [37]  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53 #>  [55]  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71 #>  [73]  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89 #>  [91]  90  91  92  93  94  95  96  97  98  99 100 #>  #> $init #>    S    I    R  #> 0.99 0.01 0.00  #>  #> $parms #>  beta gamma  #>   1.0   0.1  #>"},{"path":"/reference/make_parameters_finalsize_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"Helper function make useful arguments finalsize::final_size(), possibility specify \\(R_0\\), set 1.5 default. Draws default U.K. POLYMOD social contacts dataset included {finalsize}, three age groups: 0 -- 20, 20 -- 40, > 40. Assumes single susceptibility group, full susceptibility. Selects Newton solver.","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"","code":"make_parameters_finalsize_UK(r0 = 1.5)"},{"path":"/reference/make_parameters_finalsize_UK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"r0 basic reproductive number infection. Default 1.5 pandemic influenza.","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"list arguments finalsize::final_size().","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"","code":"pandemic_flu_args <- make_parameters_finalsize_UK(r0 = 1.5) covid_args <- make_parameters_finalsize_UK(r0 = 5.0)"},{"path":"/reference/new_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the comparison class — new_comparison","title":"Constructor for the comparison class — new_comparison","text":"Create comparison object input checks.","code":""},{"path":"/reference/new_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the comparison class — new_comparison","text":"","code":"new_comparison(data, baseline)"},{"path":"/reference/new_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the comparison class — new_comparison","text":"data list scenario objects. baseline string element list scenario objects indicates considered 'baseline' outcome, outcomes compared. match_variables variables scenario outputs match scenarios check whether comparable. comparison_variables variables scenario outputs compare 'baseline' scenario.","code":""},{"path":"/reference/new_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the comparison class — new_comparison","text":"comparison object","code":""},{"path":"/reference/new_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the scenario class — new_scenario","title":"Constructor for the scenario class — new_scenario","text":"Create scenario object input checks.","code":""},{"path":"/reference/new_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the scenario class — new_scenario","text":"","code":"new_scenario(   name,   model_function,   parameters,   extra_info = list(),   replicates = integer(1) )"},{"path":"/reference/new_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the scenario class — new_scenario","text":"name scenario name string. Defaults NA provided. model_function Function expected run epidemic scenario model, finalsize::final_size(), string e.g. \"finalsize::final_size\". Explicit namespacing preferred. parameters Parameters model_function. extra_info Extra model information may useful matching models. replicates number scenario replicates. number times model_function run.","code":""},{"path":"/reference/new_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the scenario class — new_scenario","text":"scenario object","code":""},{"path":"/reference/run_scenario.comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Run scenarios contained in a comparison — run_scenario.comparison","title":"Run scenarios contained in a comparison — run_scenario.comparison","text":"Run epidemic model scenarios specified scenario objects comparison object. Calls run_scenario.scenario() object data list comparison object.","code":""},{"path":"/reference/run_scenario.comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run scenarios contained in a comparison — run_scenario.comparison","text":"","code":"# S3 method for comparison run_scenario(x)"},{"path":"/reference/run_scenario.comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run scenarios contained in a comparison — run_scenario.comparison","text":"x scenario object.","code":""},{"path":"/reference/run_scenario.comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run scenarios contained in a comparison — run_scenario.comparison","text":"comparison attributes original object passed function, data list containing scenario objects replicate outcomes.","code":""},{"path":"/reference/run_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a scenario — run_scenario","title":"Run a scenario — run_scenario","text":"Run epidemic model scenario using function stored model_function arguments parameters. Runs many replicates function specified replicates. simulation output data stored data.","code":""},{"path":"/reference/run_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a scenario — run_scenario","text":"","code":"run_scenario(x)"},{"path":"/reference/run_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a scenario — run_scenario","text":"x scenario comparison object.","code":""},{"path":"/reference/run_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a scenario — run_scenario","text":"original object data field populated simulation output. object must assigned. Returns scenario object called scenario object expected, data field populated epidemic simulation model outputs. Returns comparison object data fields scenario objects contained populated.","code":""},{"path":"/reference/run_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a scenario — run_scenario","text":"","code":"# For a `scenario` object # prepare a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(), # using helper function   replicates = 1L )  # print to check that data are not prepared scenario_pandemic_flu #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on:  #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared  # generate scenario data scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # print to check that data are prepared scenario_pandemic_flu #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on:  #>  Scenario replicates: 1 #>  Scenario outcomes are prepared  # For a `comparison` object # prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create a comparison object x <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  x <- run_scenario(x)  x #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"pandemic_flu\" #>  All scenario data are prepared, use `sce_get_outcomes()` to get data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size"},{"path":"/reference/run_scenario.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a scenario — run_scenario.scenario","title":"Run a scenario — run_scenario.scenario","text":"Run epidemic model scenario using function stored model_function arguments parameters. Runs many replicates function specified replicates. simulation output data stored data.","code":""},{"path":"/reference/run_scenario.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a scenario — run_scenario.scenario","text":"","code":"# S3 method for scenario run_scenario(x)"},{"path":"/reference/run_scenario.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a scenario — run_scenario.scenario","text":"x scenario object.","code":""},{"path":"/reference/run_scenario.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a scenario — run_scenario.scenario","text":"original scenario object data field populated simulation output. object must assigned.","code":""},{"path":"/reference/sce_add_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add extra information to a scenario — sce_add_info","title":"Add extra information to a scenario — sce_add_info","text":"Add extra information scenario","code":""},{"path":"/reference/sce_add_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add extra information to a scenario — sce_add_info","text":"","code":"sce_add_info(x, info)"},{"path":"/reference/sce_add_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add extra information to a scenario — sce_add_info","text":"x scenario object. info named list information added extra_info list scenario object x.","code":""},{"path":"/reference/sce_add_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add extra information to a scenario — sce_add_info","text":"scenario x extra information added.","code":""},{"path":"/reference/sce_add_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add extra information to a scenario — sce_add_info","text":"","code":"# get some parameters for a `finalsize` run parameters <- make_parameters_finalsize_UK(r0 = 1.5) extra_info <- list(   age_groups = rownames(parameters$contact_matrix) ) x <- scenario(   model_function = \"finalsize::final_size\",   parameters = parameters )  sce_add_info(x, extra_info) #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on: \"age_groups\" #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/sce_aggregate_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"Function aggregate outcomes replicate data scenario object. use case function provide compact representation model output, especially stochastic models.","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"","code":"sce_aggregate_outcomes(   x,   grouping_variables,   measure_variables,   summary_functions = c(\"mean\", \"sd\") )"},{"path":"/reference/sce_aggregate_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"x scenario object data prepared. grouping_variables variables used group outcomes interest. Examples include demographic susceptibility groups. measure_variables outcomes interest summarised scenario replicates, variables grouping_variables. Examples include p_infected output finalsize::final_size(). summary_functions summary function names apply measure variables, passed strings, .e., \"mean\" rather simply mean.","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"data.table outcomes interest (measure variables) summarised using summary functions, grouping variable.","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 3 # note extra replicates )  # run scenario scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # peek at outcome to see column names sce_peek_outcomes(scenario_pandemic_flu) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\"   # aggregate outcome by demographic group sce_aggregate_outcomes(   x = scenario_pandemic_flu,   grouping_variables = c(\"demo_grp\"),   measure_variables = c(\"p_infected\"),   summary_functions = c(\"mean\", \"min\", \"max\") ) #> Key: <demo_grp> #>    demo_grp p_infected_mean p_infected_min p_infected_max #>      <char>           <num>          <num>          <num> #> 1:      40+       0.4588871      0.4588871      0.4588871 #> 2:   [0,20)       0.6544866      0.6544866      0.6544866 #> 3:  [20,40)       0.5750030      0.5750030      0.5750030"},{"path":"/reference/sce_are_comparable.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a pair of scenarios is comparable — sce_are_comparable","title":"Check whether a pair of scenarios is comparable — sce_are_comparable","text":"Check whether pair scenarios comparable","code":""},{"path":"/reference/sce_are_comparable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a pair of scenarios is comparable — sce_are_comparable","text":"","code":"sce_are_comparable(baseline, compare, match_variables, comparison_variables)"},{"path":"/reference/sce_are_comparable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a pair of scenarios is comparable — sce_are_comparable","text":"baseline scenario object. compare second scenario object. match_variables character string scenario parameter names used check whether two scenarios identical parameters characteristics (stored extra_information). comparison_variables character string column names expected scenarios' outcome data. used check whether scenarios required columns data.","code":""},{"path":"/reference/sce_are_comparable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a pair of scenarios is comparable — sce_are_comparable","text":"logical value indicating whether pair scenarios comparable.","code":""},{"path":"/reference/sce_are_comparable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a pair of scenarios is comparable — sce_are_comparable","text":"","code":"# prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # run scenarios to generate data pandemic_flu <- run_scenario(pandemic_flu) covid19 <- run_scenario(covid19)  # check whether scenarios are comparable sce_are_comparable(   baseline = pandemic_flu,   compare = covid19,   match_variables = \"demography_vector\",   comparison_variables = \"p_infected\" ) #> [1] TRUE"},{"path":"/reference/sce_drop_data.comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop outcome data from a comparison object — sce_drop_data.comparison","title":"Drop outcome data from a comparison object — sce_drop_data.comparison","text":"Drop outcome data comparison object","code":""},{"path":"/reference/sce_drop_data.comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop outcome data from a comparison object — sce_drop_data.comparison","text":"","code":"# S3 method for comparison sce_drop_data(x)"},{"path":"/reference/sce_drop_data.comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop outcome data from a comparison object — sce_drop_data.comparison","text":"x comparison object.","code":""},{"path":"/reference/sce_drop_data.comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop outcome data from a comparison object — sce_drop_data.comparison","text":"comparison object data field populated scenario objects outcome data, originally present, dropped.","code":""},{"path":"/reference/sce_drop_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop outcome data from a scenario or comparison object — sce_drop_data","title":"Drop outcome data from a scenario or comparison object — sce_drop_data","text":"Drop outcome data scenario comparison object","code":""},{"path":"/reference/sce_drop_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop outcome data from a scenario or comparison object — sce_drop_data","text":"","code":"sce_drop_data(x)"},{"path":"/reference/sce_drop_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop outcome data from a scenario or comparison object — sce_drop_data","text":"x scenario comparison object.","code":""},{"path":"/reference/sce_drop_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop outcome data from a scenario or comparison object — sce_drop_data","text":"scenario comparison object data field , scenario objects, empty list length number scenario replicates, comparison objects, list scenario objects data removed.","code":""},{"path":"/reference/sce_drop_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop outcome data from a scenario or comparison object — sce_drop_data","text":"","code":"pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   extra_info = list(country = \"UK\", pathogen = \"flu\") )  # run scenarios to generate data pandemic_flu <- run_scenario(pandemic_flu)  # drop data sce_drop_data(pandemic_flu) #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on: \"country\", \"pathogen\" #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/sce_drop_data.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop outcome data from a scenario object — sce_drop_data.scenario","title":"Drop outcome data from a scenario object — sce_drop_data.scenario","text":"Drop outcome data scenario object","code":""},{"path":"/reference/sce_drop_data.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop outcome data from a scenario object — sce_drop_data.scenario","text":"","code":"# S3 method for scenario sce_drop_data(x)"},{"path":"/reference/sce_drop_data.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop outcome data from a scenario object — sce_drop_data.scenario","text":"x scenario object.","code":""},{"path":"/reference/sce_drop_data.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop outcome data from a scenario object — sce_drop_data.scenario","text":"scenario object data field empty list length number scenario replicates.","code":""},{"path":"/reference/sce_filter_comparable.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter for comparable scenarios — sce_filter_comparable","title":"Filter for comparable scenarios — sce_filter_comparable","text":"Filter comparable scenarios","code":""},{"path":"/reference/sce_filter_comparable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter for comparable scenarios — sce_filter_comparable","text":"","code":"sce_filter_comparable(x, match_variables, comparison_variables)"},{"path":"/reference/sce_filter_comparable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter for comparable scenarios — sce_filter_comparable","text":"x 'comparison' object comprised 'scenario' objects, must data prepared. match_variables character string scenario parameter names used check whether two scenarios identical parameters. comparison_variables character string column names expected scenarios' outcome data. used check whether scenarios required columns data.","code":""},{"path":"/reference/sce_filter_comparable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter for comparable scenarios — sce_filter_comparable","text":"'comparison' object retaining 'scenario' objects data list comparable baseline scenario.","code":""},{"path":"/reference/sce_filter_comparable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter for comparable scenarios — sce_filter_comparable","text":"","code":"pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   extra_info = list(country = \"UK\", pathogen = \"flu\") )  covid19 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   extra_info = list(country = \"UK\", pathogen = \"SARS-CoV-2\") )  # run scenarios to generate data pandemic_flu <- run_scenario(pandemic_flu) covid19 <- run_scenario(covid19)  # check whether scenarios are comparable outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  # filter on pathogen sce_filter_comparable(   outbreak_comparison,   match_variables = \"pathogen\",   comparison_variables = \"p_infected\" ) #> Scenario comparison object #>  Number of scenarios: 1 #>  Baseline scenario: \"pandemic_flu\" #>  All scenario data are prepared, use `sce_get_outcomes()` to get data #>  Scenario matching variables: #>   \"pathogen\" #>  Scenario comparison variables: #>   \"p_infected\" #>  Model functions found: #>   finalsize::final_size"},{"path":"/reference/sce_from_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read scenario from JSON — sce_from_json","title":"Read scenario from JSON — sce_from_json","text":"Read scenario JSON","code":""},{"path":"/reference/sce_from_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read scenario from JSON — sce_from_json","text":"","code":"sce_from_json(file)"},{"path":"/reference/sce_from_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read scenario from JSON — sce_from_json","text":"file JSON file","code":""},{"path":"/reference/sce_from_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read scenario from JSON — sce_from_json","text":"scenario object.","code":""},{"path":"/reference/sce_from_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read scenario from JSON — sce_from_json","text":"","code":"scenario_pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 ) # create temporary filepath tmpfile <- tempfile(fileext = \".json\") sce_to_json(scenario_pandemic_flu, file = tmpfile) sce_from_json(tmpfile) #> Epidemic scenario object #>  Scenario name: \"pandemic_flu\" #>  Model function: finalsize::final_size #>  Extra information on:  #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/sce_get_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the baseline scenario — sce_get_baseline","title":"Get the name of the baseline scenario — sce_get_baseline","text":"Get name baseline scenario","code":""},{"path":"/reference/sce_get_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the baseline scenario — sce_get_baseline","text":"","code":"sce_get_baseline(x)"},{"path":"/reference/sce_get_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the baseline scenario — sce_get_baseline","text":"x comparison object.","code":""},{"path":"/reference/sce_get_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the baseline scenario — sce_get_baseline","text":"name baseline scenario comparison.","code":""},{"path":"/reference/sce_get_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of the baseline scenario — sce_get_baseline","text":"","code":"# create some scenarios pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create comparison, passing prepared scenarios with some names outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  # change baseline sce_set_baseline(   outbreak_comparison, \"covid19\" ) #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"covid19\" #>  Some scenarios have no data, use `run_scenario()` to prepare data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size  # get baseline sce_get_baseline(outbreak_comparison) #> [1] \"pandemic_flu\""},{"path":"/reference/sce_get_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario information — sce_get_information","title":"Get scenario information — sce_get_information","text":"Gets value one object parameters extra information list extra_info.","code":""},{"path":"/reference/sce_get_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario information — sce_get_information","text":"","code":"sce_get_information(x, which)"},{"path":"/reference/sce_get_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario information — sce_get_information","text":"x scenario object. parameters print.","code":""},{"path":"/reference/sce_get_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario information — sce_get_information","text":"named list two elements, 'parameters' 'extra_info', lists. lists named elements corresponding names passed . separated two lists make easier identify whether model function arguments extra information scenario.","code":""},{"path":"/reference/sce_get_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario information — sce_get_information","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 )  # get all parameters sce_get_information(scenario_pandemic_flu) #> $model_parameters #> $model_parameters$r0 #> [1] 1.5 #>  #> $model_parameters$contact_matrix #>                   #> contact.age.group         [,1]         [,2]         [,3] #>           [0,20)  4.514575e-08 1.600071e-08 8.965770e-09 #>           [20,40) 1.600071e-08 2.489595e-08 1.346051e-08 #>           40+     8.965770e-09 1.346051e-08 1.464763e-08 #>  #> $model_parameters$demography_vector #> [1] 14799290 16526302 28961159 #>  #> $model_parameters$p_susceptibility #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]    1 #>  #> $model_parameters$susceptibility #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]    1 #>  #> $model_parameters$solver #> [1] \"newton\" #>  #>  #> $scenario_information #> list() #>   # get only some parameters sce_get_information(scenario_pandemic_flu, which = c(\"r0\", \"solver\")) #> $r0 #> [1] 1.5 #>  #> $solver #> [1] \"newton\" #>"},{"path":"/reference/sce_get_outcomes.comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcomes from a comparison object — sce_get_outcomes.comparison","title":"Get scenario outcomes from a comparison object — sce_get_outcomes.comparison","text":"Get scenario outcomes comparison object","code":""},{"path":"/reference/sce_get_outcomes.comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcomes from a comparison object — sce_get_outcomes.comparison","text":"","code":"# S3 method for comparison sce_get_outcomes(x)"},{"path":"/reference/sce_get_outcomes.comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcomes from a comparison object — sce_get_outcomes.comparison","text":"x comparison object data prepared. Check whether data prepared using sce_has_data().","code":""},{"path":"/reference/sce_get_outcomes.comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcomes from a comparison object — sce_get_outcomes.comparison","text":"single data.table holding outcomes replicate scenario specified x. Scenarios identified either names provided data list x, simple synthetic identifier 'scenario_01'.","code":""},{"path":"/reference/sce_get_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcomes — sce_get_outcomes","title":"Get scenario outcomes — sce_get_outcomes","text":"Get scenario outcomes","code":""},{"path":"/reference/sce_get_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcomes — sce_get_outcomes","text":"","code":"sce_get_outcomes(x)"},{"path":"/reference/sce_get_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcomes — sce_get_outcomes","text":"x scenario comparison object scenario outcome data prepared. Check whether data prepared using sce_has_data().","code":""},{"path":"/reference/sce_get_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcomes — sce_get_outcomes","text":"single data.table holding output replicates scenario. x comparison object, data.table holds outcomes replicate scenario specified therein. Scenarios case identified either names , simple synthetic identifier 'scenario_01'.","code":""},{"path":"/reference/sce_get_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario outcomes — sce_get_outcomes","text":"","code":"# For the `scenario` class # create a scenario specification scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 3 # note extra replicates )  # run scenario scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # get outcomes sce_get_outcomes(scenario_pandemic_flu) #>    demo_grp   susc_grp susceptibility p_infected replicate #>      <char>     <char>          <num>      <num>     <int> #> 1:   [0,20) susc_grp_1              1  0.6544866         1 #> 2:  [20,40) susc_grp_1              1  0.5750030         1 #> 3:      40+ susc_grp_1              1  0.4588871         1 #> 4:   [0,20) susc_grp_1              1  0.6544866         2 #> 5:  [20,40) susc_grp_1              1  0.5750030         2 #> 6:      40+ susc_grp_1              1  0.4588871         2 #> 7:   [0,20) susc_grp_1              1  0.6544866         3 #> 8:  [20,40) susc_grp_1              1  0.5750030         3 #> 9:      40+ susc_grp_1              1  0.4588871         3  # For the `comparison` class # prepare two scenarios of the final size of an epidemic pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create a comparison object outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  outbreak_comparison <- run_scenario(outbreak_comparison)  sce_get_outcomes(outbreak_comparison) #>    demo_grp   susc_grp susceptibility p_infected replicate scenario_name #>      <char>     <char>          <num>      <num>     <int>        <char> #> 1:   [0,20) susc_grp_1              1  0.6544866         1  pandemic_flu #> 2:  [20,40) susc_grp_1              1  0.5750030         1  pandemic_flu #> 3:      40+ susc_grp_1              1  0.4588871         1  pandemic_flu #> 4:   [0,20) susc_grp_1              1  0.9973053         1    scenario_2 #> 5:  [20,40) susc_grp_1              1  0.9941026         1    scenario_2 #> 6:      40+ susc_grp_1              1  0.9785699         1    scenario_2"},{"path":"/reference/sce_get_outcomes.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcomes from a scenario object — sce_get_outcomes.scenario","title":"Get scenario outcomes from a scenario object — sce_get_outcomes.scenario","text":"Get scenario outcomes scenario object","code":""},{"path":"/reference/sce_get_outcomes.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcomes from a scenario object — sce_get_outcomes.scenario","text":"","code":"# S3 method for scenario sce_get_outcomes(x)"},{"path":"/reference/sce_get_outcomes.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcomes from a scenario object — sce_get_outcomes.scenario","text":"x scenario object data prepared. Check whether data prepared using sce_has_data().","code":""},{"path":"/reference/sce_get_outcomes.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcomes from a scenario object — sce_get_outcomes.scenario","text":"single data.table holding output replicates scenario. Contains replicate column help differentiate data replicate.","code":""},{"path":"/reference/sce_get_scenario_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario names from a comparison object — sce_get_scenario_names","title":"Get scenario names from a comparison object — sce_get_scenario_names","text":"Get scenario names comparison object","code":""},{"path":"/reference/sce_get_scenario_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario names from a comparison object — sce_get_scenario_names","text":"","code":"sce_get_scenario_names(x)"},{"path":"/reference/sce_get_scenario_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario names from a comparison object — sce_get_scenario_names","text":"x comparison object.","code":""},{"path":"/reference/sce_get_scenario_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario names from a comparison object — sce_get_scenario_names","text":"vector scenario names.","code":""},{"path":"/reference/sce_get_scenario_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario names from a comparison object — sce_get_scenario_names","text":"","code":"# create some scenarios pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create comparison, passing prepared scenarios with some names outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )"},{"path":"/reference/sce_has_comparison_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for variables in scenario outcomes — sce_has_comparison_variables","title":"Check for variables in scenario outcomes — sce_has_comparison_variables","text":"Check variables scenario outcomes","code":""},{"path":"/reference/sce_has_comparison_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for variables in scenario outcomes — sce_has_comparison_variables","text":"","code":"sce_has_comparison_variables(x, variables)"},{"path":"/reference/sce_has_comparison_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for variables in scenario outcomes — sce_has_comparison_variables","text":"x scenario object. variables character vector variables expected found data list x.","code":""},{"path":"/reference/sce_has_comparison_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for variables in scenario outcomes — sce_has_comparison_variables","text":"logical indicating whether variables correspond column names x$data.","code":""},{"path":"/reference/sce_has_data.comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for scenario data — sce_has_data.comparison","title":"Check for scenario data — sce_has_data.comparison","text":"Check scenario data","code":""},{"path":"/reference/sce_has_data.comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for scenario data — sce_has_data.comparison","text":"","code":"# S3 method for comparison sce_has_data(x)"},{"path":"/reference/sce_has_data.comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for scenario data — sce_has_data.comparison","text":"x comparison object.","code":""},{"path":"/reference/sce_has_data.comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for scenario data — sce_has_data.comparison","text":"boolean, whether simulation object data.","code":""},{"path":"/reference/sce_has_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for scenario data — sce_has_data","title":"Check for scenario data — sce_has_data","text":"Check scenario data","code":""},{"path":"/reference/sce_has_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for scenario data — sce_has_data","text":"","code":"sce_has_data(x)"},{"path":"/reference/sce_has_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for scenario data — sce_has_data","text":"x scenario comparison object.","code":""},{"path":"/reference/sce_has_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for scenario data — sce_has_data","text":"Whether scenario data, whether scenario objects comparison object data generated.","code":""},{"path":"/reference/sce_has_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for scenario data — sce_has_data","text":"","code":"# create a scenario pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 ) covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 3.0),   replicates = 1 )  # for a `scenario` object sce_has_data(pandemic_flu) #> [1] FALSE  # for a `comparison` object comparison_flu_covid <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" ) sce_has_data(comparison_flu_covid) #> [1] FALSE"},{"path":"/reference/sce_has_data.scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for scenario data — sce_has_data.scenario","title":"Check for scenario data — sce_has_data.scenario","text":"Check scenario data","code":""},{"path":"/reference/sce_has_data.scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for scenario data — sce_has_data.scenario","text":"","code":"# S3 method for scenario sce_has_data(x)"},{"path":"/reference/sce_has_data.scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for scenario data — sce_has_data.scenario","text":"x scenario object.","code":""},{"path":"/reference/sce_has_data.scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for scenario data — sce_has_data.scenario","text":"boolean, whether simulation object data.","code":""},{"path":"/reference/sce_has_match_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for scenario matching variables — sce_has_match_variables","title":"Check for scenario matching variables — sce_has_match_variables","text":"Check scenario matching variables","code":""},{"path":"/reference/sce_has_match_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for scenario matching variables — sce_has_match_variables","text":"","code":"sce_has_match_variables(x, variables)"},{"path":"/reference/sce_has_match_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for scenario matching variables — sce_has_match_variables","text":"x scenario object. variables character vector scenario parameter names extra information names search x.","code":""},{"path":"/reference/sce_has_match_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for scenario matching variables — sce_has_match_variables","text":"logical indicating whether variables correspond parameter names x.","code":""},{"path":"/reference/sce_peek_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcome names — sce_peek_outcomes","title":"Get scenario outcome names — sce_peek_outcomes","text":"Function quickly view names types columns scenario outcome data. Operates first replicate scenario run, assumes outcome data data.frames.","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcome names — sce_peek_outcomes","text":"","code":"sce_peek_outcomes(x, view_rows = FALSE)"},{"path":"/reference/sce_peek_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcome names — sce_peek_outcomes","text":"x scenario object data prepared. Check whether data prepared using sce_has_data(). view_rows Whether return first rows first replicate outcome, using head().","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcome names — sce_peek_outcomes","text":"Prints scenario outcome data's column names types screen, head() first outcome replicate view_rows = TRUE.","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario outcome names — sce_peek_outcomes","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 ) scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # for column names and types sce_peek_outcomes(scenario_pandemic_flu) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\"  # for data.frame head sce_peek_outcomes(scenario_pandemic_flu, view_rows = FALSE) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\""},{"path":"/reference/sce_set_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the baseline scenario in a comparison — sce_set_baseline","title":"Change the baseline scenario in a comparison — sce_set_baseline","text":"Change baseline scenario comparison","code":""},{"path":"/reference/sce_set_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the baseline scenario in a comparison — sce_set_baseline","text":"","code":"sce_set_baseline(x, new_baseline)"},{"path":"/reference/sce_set_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the baseline scenario in a comparison — sce_set_baseline","text":"x comparison object. new_baseline name scenario object contained comparison considered new baseline.","code":""},{"path":"/reference/sce_set_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the baseline scenario in a comparison — sce_set_baseline","text":"comparison object baseline tag set new baseline .","code":""},{"path":"/reference/sce_set_baseline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the baseline scenario in a comparison — sce_set_baseline","text":"","code":"# create some scenarios pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   name = \"covid19\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create comparison, passing prepared scenarios with some names outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  # change baseline sce_set_baseline(   outbreak_comparison, \"covid19\" ) #> Scenario comparison object #>  Number of scenarios: 2 #>  Baseline scenario: \"covid19\" #>  Some scenarios have no data, use `run_scenario()` to prepare data #>  Scenario matching variables: #>   No matching variables specified yet. #>  Scenario comparison variables: #>   No comparison variables specified yet. #>  Model functions found: #>   finalsize::final_size"},{"path":"/reference/sce_set_scenario_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set scenario names in a comparison object. — sce_set_scenario_names","title":"Set scenario names in a comparison object. — sce_set_scenario_names","text":"Set scenario names comparison object.","code":""},{"path":"/reference/sce_set_scenario_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set scenario names in a comparison object. — sce_set_scenario_names","text":"","code":"sce_set_scenario_names(x, old_names, new_names, new_baseline)"},{"path":"/reference/sce_set_scenario_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set scenario names in a comparison object. — sce_set_scenario_names","text":"x comparison object. old_names character vector names scenarios comparison object, replaced. new_names character vector names replace names given old_names. new_baseline Optional. name new baseline scenario, changed. old baseline retained argument missing.","code":""},{"path":"/reference/sce_set_scenario_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set scenario names in a comparison object. — sce_set_scenario_names","text":"comparison object new scenario names.","code":""},{"path":"/reference/sce_set_scenario_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set scenario names in a comparison object. — sce_set_scenario_names","text":"","code":"# create some scenarios pandemic_flu <- scenario(   name = \"pandemic_flu\",   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 1.5),   replicates = 1L )  covid19 <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(r0 = 5.0),   replicates = 1L )  # create comparison, passing prepared scenarios with some names outbreak_comparison <- comparison(   pandemic_flu, covid19,   baseline = \"pandemic_flu\" )  # change all names to upper case outbreak_comparison <- sce_set_scenario_names(   x = outbreak_comparison,   old_names = \"pandemic_flu\",   new_names = \"Influenza\",   new_baseline = \"Influenza\" )"},{"path":"/reference/sce_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write scenario to JSON — sce_to_json","title":"Write scenario to JSON — sce_to_json","text":"Write scenario JSON","code":""},{"path":"/reference/sce_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write scenario to JSON — sce_to_json","text":"","code":"sce_to_json(x, file)"},{"path":"/reference/sce_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write scenario to JSON — sce_to_json","text":"x scenario object. file file write JSON.","code":""},{"path":"/reference/sce_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write scenario to JSON — sce_to_json","text":"Writes scenario object JSON.","code":""},{"path":"/reference/sce_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write scenario to JSON — sce_to_json","text":"","code":"scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 )  sce_to_json(scenario_pandemic_flu, file = tempfile())"},{"path":"/reference/scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scenario object — scenario","title":"Create a scenario object — scenario","text":"scenario class intended store outcomes number runs epidemic simulation. work progress, initially targeted compatibility outputs finalsize::final_size().","code":""},{"path":"/reference/scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scenario object — scenario","text":"","code":"scenario(   name = NA_character_,   model_function,   parameters,   extra_info = list(),   replicates = 1L )"},{"path":"/reference/scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scenario object — scenario","text":"name scenario name string. Defaults NA provided. model_function Function expected run epidemic scenario model, finalsize::final_size(), string e.g. \"finalsize::final_size\". Explicit namespacing preferred. parameters Parameters model_function. extra_info Extra information useful comparing scenarios, details population structure infection characteristics. replicates number scenario replicates. number times model_function run.","code":""},{"path":"/reference/scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a scenario object — scenario","text":"scenario object","code":""},{"path":"/reference/scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a scenario object — scenario","text":"","code":"# prepare arguments to `finalsize::final_size()` # using the included convenience function pandemic_flu_args <- make_parameters_finalsize_UK(r0 = 1.5)  # prepare extra information on age group limits age_groups <- rownames(pandemic_flu_args$contact_matrix)  scenario(   model_function = \"finalsize::final_size\",   parameters = pandemic_flu_args,   extra_info = list(     age_groups = age_groups   ),   replicates = 1L ) #> Epidemic scenario object #>  Scenario name: No name specified (NA) #>  Model function: finalsize::final_size #>  Extra information on: \"age_groups\" #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/scenarios-package.html","id":null,"dir":"Reference","previous_headings":"","what":"scenarios: Compare Epidemic Scenarios — scenarios-package","title":"scenarios: Compare Epidemic Scenarios — scenarios-package","text":"Compare epidemic scenarios 'finalsize' package.","code":""},{"path":[]},{"path":"/reference/scenarios-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scenarios: Compare Epidemic Scenarios — scenarios-package","text":"Maintainer: Pratik Gupte pratik.gupte@lshtm.ac.uk (ORCID) [copyright holder] Authors: Rosalind Eggo rosalind.eggo@lshtm.ac.uk (ORCID) [copyright holder] Edwin Van Leeuwen edwin.vanleeuwen@ukhsa.gov.uk (ORCID) [copyright holder]","code":""},{"path":"/reference/validate_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Validator for the comparison class — validate_comparison","title":"Validator for the comparison class — validate_comparison","text":"Validator comparison class","code":""},{"path":"/reference/validate_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validator for the comparison class — validate_comparison","text":"","code":"validate_comparison(object)"},{"path":"/reference/validate_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validator for the comparison class — validate_comparison","text":"object comparison object.","code":""},{"path":"/reference/validate_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validator for the comparison class — validate_comparison","text":"None. Errors invalid comparison object provided.","code":""},{"path":"/reference/validate_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Validator for the scenario class — validate_scenario","title":"Validator for the scenario class — validate_scenario","text":"Validator scenario class","code":""},{"path":"/reference/validate_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validator for the scenario class — validate_scenario","text":"","code":"validate_scenario(object, data_ok = FALSE)"},{"path":"/reference/validate_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validator for the scenario class — validate_scenario","text":"object scenario object data_ok boolean whether scenario can data. useful creating scenarios manually existing objects, reading scenario data file.","code":""},{"path":"/reference/validate_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validator for the scenario class — validate_scenario","text":"None. Errors invalid scenario object provided.","code":""}]
