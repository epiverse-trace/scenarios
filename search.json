[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 scenarios authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P (2023). scenarios: Compare Epidemic Scenarios. https://github.com/epiverse-trace/scenarios, https://epiverse-trace.github.io/scenarios/.","code":"@Manual{,   title = {scenarios: Compare Epidemic Scenarios},   author = {Pratik Gupte},   year = {2023},   note = {https://github.com/epiverse-trace/scenarios, https://epiverse-trace.github.io/scenarios/}, }"},{"path":"/index.html","id":"scenarios-compare-epidemic-scenarios","dir":"","previous_headings":"","what":"Compare Epidemic Scenarios","title":"Compare Epidemic Scenarios","text":"scenarios intended provide functions compare outcomes epidemic modelling simulations. package still work progress.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compare Epidemic Scenarios","text":"can install development version scenarios GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"epiverse-trace/scenarios\")"},{"path":[]},{"path":"/index.html","id":"an-example-with-finalsize","dir":"","previous_headings":"Quick start","what":"An example with finalsize","title":"Compare Epidemic Scenarios","text":"Define epidemic model scenario creating new scenario object. standard workflow needs model function, [finalsize::final_size()], appropriate arguments function. View summary scenario. scenario object created model function initially run. can checked using helper function. Tip: Many helper functions prefix sce_ help found quickly using autocomplete various text editors IDEs. Model outcome data can generated running model function parameters specified scenario. Take peek column names model outcome replicates. Get outcomes replicates single dataset, aggregate outcome variable interest across replicates grouping variable.","code":"# load scenarios library(scenarios)  # create a scenario for pandemic-potential influenza # with finalsize::final_size() as the model function scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(), # a helper function   replicates = 3 ) scenario_pandemic_flu # check whether the scenario data have been generated sce_has_data(scenario_pandemic_flu) run_scenario(scenario_pandemic_flu) # NOTE no assignment needed sce_peek_outcomes(scenario_pandemic_flu) # get all output head(sce_get_outcomes(scenario_pandemic_flu))  # aggregate proportion infected by demographic group # NOTE that all replicates have the same outcome in this deterministic model sce_aggregate_outcomes(   x = scenario_pandemic_flu,   grouping_variables = c(\"demo_grp\"),   measure_variables = c(\"p_infected\"),   summary_functions = c(\"mean\", \"min\", \"max\") )"},{"path":"/index.html","id":"an-example-with-epidemics","dir":"","previous_headings":"Quick start","what":"An example with epidemics","title":"Compare Epidemic Scenarios","text":"example shows workflow applied simple, deterministic epidemic model epidemics package.","code":"# create a new scenario scenario_sir <- scenario(   model_function = \"epidemics::sir_desolve\",   parameters = make_parameters_SIR_epidemic(), # a helper function   replicates = 5L )  # view the initial conditions and infection parameters sce_get_parameters(scenario_sir, which = c(\"init\", \"parms\"))  # generate scenario outcomes by running the model run_scenario(scenario_sir) # NOTE no assignment  # peek at the outcomes sce_peek_outcomes(scenario_sir)  # view the aggregated outcomes # this is the per-timestep, per-class (S, I, R) mean proportion # and is the same across replicates in this deterministic model tail(   sce_aggregate_outcomes(     scenario_sir,     grouping_variables = c(\"time\", \"state\"),     measure_variables = \"proportion\",     summary_functions = \"mean\"   ) )"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Compare Epidemic Scenarios","text":"report bug please open issue.","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Compare Epidemic Scenarios","text":"Contributions scenarios welcomed. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Compare Epidemic Scenarios","text":"Please note scenarios project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":null,"dir":"Reference","previous_headings":"","what":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"Function make convenient default parameters SIR epidemic model implemented epidemics::sir_desolve().","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"","code":"make_parameters_SIR_epidemic(beta = 1, gamma = 0.1)"},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"beta rate transmission \\(\\beta\\). gamma rate recovery infected individuals \\(\\gamma\\).","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"list SIR model parameters, suitable arguments epidemics::sir_desolve().","code":""},{"path":"/reference/make_parameters_SIR_epidemic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make useful default arguments to epidemics::sir_desolve() — make_parameters_SIR_epidemic","text":"","code":"make_parameters_SIR_epidemic() #> $times #>   [1]   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [19]  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35 #>  [37]  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53 #>  [55]  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71 #>  [73]  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89 #>  [91]  90  91  92  93  94  95  96  97  98  99 100 #>  #> $init #>    S    I    R  #> 0.99 0.01 0.00  #>  #> $parms #>  beta gamma  #>   1.0   0.1  #>"},{"path":"/reference/make_parameters_finalsize_UK.html","id":null,"dir":"Reference","previous_headings":"","what":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"Helper function make useful arguments finalsize::final_size(), possibility specify \\(R_0\\), set 1.5 default. Draws default U.K. POLYMOD social contacts dataset included {finalsize}, three age groups: 0 -- 20, 20 -- 40, > 40. Assumes single susceptibility group, full susceptibility. Selects Newton solver.","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"","code":"make_parameters_finalsize_UK(r0 = 1.5)"},{"path":"/reference/make_parameters_finalsize_UK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"r0 basic reproductive number infection. Default 1.5 pandemic influenza.","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"list arguments finalsize::final_size().","code":""},{"path":"/reference/make_parameters_finalsize_UK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make useful default arguments to finalsize::final_size() — make_parameters_finalsize_UK","text":"","code":"pandemic_flu_args <- make_parameters_finalsize_UK(r0 = 1.5) covid_args <- make_parameters_finalsize_UK(r0 = 5.0)"},{"path":"/reference/new_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the scenario class — new_scenario","title":"Constructor for the scenario class — new_scenario","text":"Create scenario object check inputs.","code":""},{"path":"/reference/new_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the scenario class — new_scenario","text":"","code":"new_scenario(model_function, parameters = list(), replicates = integer(1))"},{"path":"/reference/new_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the scenario class — new_scenario","text":"model_function Function expected run epidemic scenario model, finalsize::final_size(), string e.g. \"finalsize::final_size\". Explicit namespacing preferred. parameters Parameters model_function. replicates number scenario replicates. number times model_function run.","code":""},{"path":"/reference/new_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the scenario class — new_scenario","text":"scenario object","code":""},{"path":"/reference/run_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a scenario — run_scenario","title":"Run a scenario — run_scenario","text":"Run epidemic model scenario using function stored model_function arguments parameters. Runs many replicates function specified replicates. simulation output data stored data, data_available tag updated TRUE.","code":""},{"path":"/reference/run_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a scenario — run_scenario","text":"","code":"run_scenario(x)"},{"path":"/reference/run_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a scenario — run_scenario","text":"x scenario object.","code":""},{"path":"/reference/run_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a scenario — run_scenario","text":"original scenario object data field populated simulation output. object must assigned.","code":""},{"path":"/reference/run_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a scenario — run_scenario","text":"","code":"# prepare a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(), # using helper function   replicates = 1L )  # print to check that data are not prepared scenario_pandemic_flu #> Epidemic scenario object #>  Model function: finalsize::final_size #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared  # generate scenario data scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # print to check that data are prepared scenario_pandemic_flu #> Epidemic scenario object #>  Model function: finalsize::final_size #>  Scenario replicates: 1 #>  Scenario outcomes are prepared"},{"path":"/reference/sce_aggregate_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"Aggregate scenario outcomes across replicates","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"","code":"sce_aggregate_outcomes(   x,   grouping_variables,   measure_variables,   summary_functions = c(\"mean\", \"sd\") )"},{"path":"/reference/sce_aggregate_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"x scenario object data prepared. grouping_variables variables used group outcomes interest. Examples include demographic susceptibility groups. measure_variables outcomes interest summarised scenario replicates, variables grouping_variables. Examples include p_infected output finalsize::final_size(). summary_functions summary function names apply measure variables, passed strings, .e., \"mean\" rather simply mean.","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"data.table outcomes interest (measure variables) summarised using summary functions, grouping variable.","code":""},{"path":"/reference/sce_aggregate_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate scenario outcomes across replicates — sce_aggregate_outcomes","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 3 # note extra replicates )  # run scenario scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # peek at outcome to see column names sce_peek_outcomes(scenario_pandemic_flu) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\"   # aggregate outcome by demographic group sce_aggregate_outcomes(   x = scenario_pandemic_flu,   grouping_variables = c(\"demo_grp\"),   measure_variables = c(\"p_infected\"),   summary_functions = c(\"mean\", \"min\", \"max\") ) #>    demo_grp p_infected_mean p_infected_min p_infected_max #> 1:      40+       0.4588871      0.4588871      0.4588871 #> 2:   [0,20)       0.6544866      0.6544866      0.6544866 #> 3:  [20,40)       0.5750030      0.5750030      0.5750030"},{"path":"/reference/sce_from_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read scenario from JSON — sce_from_json","title":"Read scenario from JSON — sce_from_json","text":"Read scenario JSON","code":""},{"path":"/reference/sce_from_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read scenario from JSON — sce_from_json","text":"","code":"sce_from_json(file)"},{"path":"/reference/sce_from_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read scenario from JSON — sce_from_json","text":"file JSON file","code":""},{"path":"/reference/sce_from_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read scenario from JSON — sce_from_json","text":"scenario object.","code":""},{"path":"/reference/sce_from_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read scenario from JSON — sce_from_json","text":"","code":"scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 ) # create temporary filepath tmpfile <- tempfile(fileext = \".json\") sce_to_json(scenario_pandemic_flu, file = tmpfile) sce_from_json(tmpfile) #> Epidemic scenario object #>  Model function: finalsize::final_size #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/sce_get_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcomes — sce_get_outcomes","title":"Get scenario outcomes — sce_get_outcomes","text":"Get scenario outcomes","code":""},{"path":"/reference/sce_get_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcomes — sce_get_outcomes","text":"","code":"sce_get_outcomes(x)"},{"path":"/reference/sce_get_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcomes — sce_get_outcomes","text":"x scenario object data prepared. Check whether data prepared using sce_has_data().","code":""},{"path":"/reference/sce_get_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcomes — sce_get_outcomes","text":"single data.table holding output replicates scenario. Contains replicate column help differentiate data replicate.","code":""},{"path":"/reference/sce_get_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario outcomes — sce_get_outcomes","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 3 # note extra replicates )  # run scenario scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # get outcomes sce_get_outcomes(scenario_pandemic_flu) #>    demo_grp   susc_grp susceptibility p_infected replicate #> 1:   [0,20) susc_grp_1              1  0.6544866         1 #> 2:  [20,40) susc_grp_1              1  0.5750030         1 #> 3:      40+ susc_grp_1              1  0.4588871         1 #> 4:   [0,20) susc_grp_1              1  0.6544866         2 #> 5:  [20,40) susc_grp_1              1  0.5750030         2 #> 6:      40+ susc_grp_1              1  0.4588871         2 #> 7:   [0,20) susc_grp_1              1  0.6544866         3 #> 8:  [20,40) susc_grp_1              1  0.5750030         3 #> 9:      40+ susc_grp_1              1  0.4588871         3"},{"path":"/reference/sce_get_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Print scenario parameters — sce_get_parameters","title":"Print scenario parameters — sce_get_parameters","text":"Print scenario parameters","code":""},{"path":"/reference/sce_get_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print scenario parameters — sce_get_parameters","text":"","code":"sce_get_parameters(x, which = NULL)"},{"path":"/reference/sce_get_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print scenario parameters — sce_get_parameters","text":"x scenario() object. parameters print.","code":""},{"path":"/reference/sce_get_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print scenario parameters — sce_get_parameters","text":"Nothing. Prints list parameters screen.","code":""},{"path":"/reference/sce_get_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print scenario parameters — sce_get_parameters","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 )  # get all parameters sce_get_parameters(scenario_pandemic_flu) #> $r0 #> [1] 1.5 #>  #> $contact_matrix #>                   #> contact.age.group         [,1]         [,2]         [,3] #>           [0,20)  4.514575e-08 1.600071e-08 8.965770e-09 #>           [20,40) 1.600071e-08 2.489595e-08 1.346051e-08 #>           40+     8.965770e-09 1.346051e-08 1.464763e-08 #>  #> $demography_vector #> [1] 14799290 16526302 28961159 #>  #> $p_susceptibility #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]    1 #>  #> $susceptibility #>      [,1] #> [1,]    1 #> [2,]    1 #> [3,]    1 #>  #> $solver #> [1] \"newton\" #>   # get only some parameters sce_get_parameters(scenario_pandemic_flu, which = c(\"r0\", \"solver\")) #> $r0 #> [1] 1.5 #>  #> $solver #> [1] \"newton\" #>"},{"path":"/reference/sce_has_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for scenario data — sce_has_data","title":"Check for scenario data — sce_has_data","text":"Check scenario data","code":""},{"path":"/reference/sce_has_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for scenario data — sce_has_data","text":"","code":"sce_has_data(x)"},{"path":"/reference/sce_has_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for scenario data — sce_has_data","text":"x scenario object.","code":""},{"path":"/reference/sce_has_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for scenario data — sce_has_data","text":"boolean, whether simulation object data.","code":""},{"path":"/reference/sce_has_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for scenario data — sce_has_data","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 )  sce_has_data(scenario_pandemic_flu) #> [1] FALSE"},{"path":"/reference/sce_peek_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scenario outcome names — sce_peek_outcomes","title":"Get scenario outcome names — sce_peek_outcomes","text":"Function quickly view names types columns scenario outcome data. Operates first replicate scenario run, assumes outcome data data.frames.","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scenario outcome names — sce_peek_outcomes","text":"","code":"sce_peek_outcomes(x, view_rows = FALSE)"},{"path":"/reference/sce_peek_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scenario outcome names — sce_peek_outcomes","text":"x scenario object data prepared. Check whether data prepared using sce_has_data(). view_rows Whether return first rows first replicate outcome, using head().","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scenario outcome names — sce_peek_outcomes","text":"Prints scenario outcome data's column names types screen, head() first outcome replicate view_rows = TRUE.","code":""},{"path":"/reference/sce_peek_outcomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scenario outcome names — sce_peek_outcomes","text":"","code":"# create a scenario scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 ) scenario_pandemic_flu <- run_scenario(scenario_pandemic_flu)  # for column names and types sce_peek_outcomes(scenario_pandemic_flu) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\"  # for data.frame head sce_peek_outcomes(scenario_pandemic_flu, view_rows = FALSE) #>       demo_grp       susc_grp susceptibility     p_infected      replicate  #>    \"character\"    \"character\"      \"numeric\"      \"numeric\"      \"integer\""},{"path":"/reference/sce_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write scenario to JSON — sce_to_json","title":"Write scenario to JSON — sce_to_json","text":"Write scenario JSON","code":""},{"path":"/reference/sce_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write scenario to JSON — sce_to_json","text":"","code":"sce_to_json(x, file)"},{"path":"/reference/sce_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write scenario to JSON — sce_to_json","text":"x scenario object. file file write JSON.","code":""},{"path":"/reference/sce_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write scenario to JSON — sce_to_json","text":"Writes scenario object JSON.","code":""},{"path":"/reference/sce_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write scenario to JSON — sce_to_json","text":"","code":"scenario_pandemic_flu <- scenario(   model_function = \"finalsize::final_size\",   parameters = make_parameters_finalsize_UK(),   replicates = 1 )  sce_to_json(scenario_pandemic_flu, file = tempfile())"},{"path":"/reference/scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scenario object — scenario","title":"Create a scenario object — scenario","text":"scenario class intended store outcomes number runs epidemic simulation. work progress, initially targeted compatibility outputs finalsize::final_size().","code":""},{"path":"/reference/scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scenario object — scenario","text":"","code":"scenario(model_function, parameters = list(), replicates = integer(1))"},{"path":"/reference/scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scenario object — scenario","text":"model_function Function expected run epidemic scenario model, finalsize::final_size(), string e.g. \"finalsize::final_size\". Explicit namespacing preferred. parameters Parameters model_function. replicates number scenario replicates. number times model_function run.","code":""},{"path":"/reference/scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a scenario object — scenario","text":"scenario object","code":""},{"path":"/reference/scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a scenario object — scenario","text":"","code":"# prepare arguments to `finalsize::final_size()` pandemic_flu_args <- make_parameters_finalsize_UK(r0 = 1.5)  scenarios::scenario(   model_function = \"finalsize::final_size\",   parameters = pandemic_flu_args,   replicates = 1L ) #> Epidemic scenario object #>  Model function: finalsize::final_size #>  Scenario replicates: 1 #>  Scenario outcomes are not prepared"},{"path":"/reference/scenarios-package.html","id":null,"dir":"Reference","previous_headings":"","what":"scenarios: Compare Epidemic Scenarios — scenarios-package","title":"scenarios: Compare Epidemic Scenarios — scenarios-package","text":"Compare epidemic scenarios 'finalsize' package.","code":""},{"path":[]},{"path":"/reference/scenarios-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"scenarios: Compare Epidemic Scenarios — scenarios-package","text":"Maintainer: Pratik Gupte pratik.gupte@lshtm.ac.uk (ORCID) [copyright holder]","code":""},{"path":"/reference/validate_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Validator for the scenario class — validate_scenario","title":"Validator for the scenario class — validate_scenario","text":"Validator scenario class","code":""},{"path":"/reference/validate_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validator for the scenario class — validate_scenario","text":"","code":"validate_scenario(scenario, data_ok = FALSE)"},{"path":"/reference/validate_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validator for the scenario class — validate_scenario","text":"scenario scenario object data_ok boolean whether scenario can data. useful creating scenarios manually existing objects, reading scenario data file.","code":""},{"path":"/reference/validate_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validator for the scenario class — validate_scenario","text":"None. Errors invalid scenario object provided.","code":""}]
